# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  #vmImage: 'ubuntu-latest'
  vmImage: 'windows-latest'
variables:
  buildConfiguration: 'Release'
steps:
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '3.1.x'
- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'SonarCloud'
    organization: 'becauseimclever'
    scannerMode: 'MSBuild'
    projectKey: 'Fortinbra_DeviceBase'
    projectName: 'DeviceBase'
- task: DotNetCoreCLI@2
  inputs:
    command: 'restore'
    projects: 'DeviceBase.sln'
    feedsToUse: 'select'
- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: 'DeviceBase.sln'
    arguments: '--configuration $(buildconfiguration)'
- task: DotNetCoreCLI@2
  inputs:
    command: 'test'
    projects: 'DeviceBase.sln'
    arguments: '--configuration $(BuildConfiguration) --collect "Code coverage" --logger trx'
    testRunTitle: 'All Tests'
- task: DotNetCoreCLI@2
  inputs:
    command: 'pack'
    packagesToPack: '**/*.csproj'
    versioningScheme: 'byPrereleaseNumber'
    majorVersion: '1'
    minorVersion: '0'
    patchVersion: '0'
- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Pipeline.Workspace)'
    publishLocation: 'pipeline'
- task: DotNetCoreCLI@2
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg'
    nuGetFeedType: 'internal'
    publishVstsFeed: 'c64eac06-a5dc-4837-b121-13429513d7a1/5f95ea8c-eff7-41ff-83aa-d52760b08d27'
- task: SonarCloudAnalyze@1
- task: SonarCloudPublish@1
  inputs:
    pollingTimeoutSec: '300'